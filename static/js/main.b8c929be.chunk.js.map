{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","state","id","name","email","this","setState","props","monster","className","alt","src","Component","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAqCeA,E,kDAhCX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,GAAI,GACJC,KAAM,GACNC,MAAO,IAND,E,qDAUd,WACIC,KAAKC,SAAS,CACVJ,GAAIG,KAAKE,MAAMC,QAAQN,GACvBC,KAAME,KAAKE,MAAMC,QAAQL,KACzBC,MAAOC,KAAKE,MAAMC,QAAQJ,U,oBAIlC,WACI,OACI,sBAAKK,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BN,KAAKJ,MAAMC,GAArC,4BAEP,mCAAMG,KAAKJ,MAAME,KAAjB,OACA,kCAAKE,KAAKJ,MAAMG,MAAhB,c,GA5BGQ,aCiBJC,E,4JAbX,WACI,OACI,qBAAKJ,UAAU,YAAf,SAEQJ,KAAKE,MAAMO,SAASC,KAAI,SAACP,GAAD,OACpB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQN,a,GAPpBU,aCaRI,G,kKAdX,WAAU,IAAD,EACiCX,KAAKE,MAAnCU,EADH,EACGA,YAAaC,EADhB,EACgBA,aAErB,OACI,uBACIT,UAAU,SACVU,KAAK,SACLF,YAAaA,EACbG,SAAUF,Q,GATFN,cC8CTS,E,kDAzCb,aAAe,IAAD,8BACZ,gBAgBFC,eAAiB,SAAAC,GACf,EAAKjB,SAAS,CAAEkB,YAAaD,EAAME,OAAOC,SAf1C,EAAKzB,MAAQ,CACXa,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAGlBG,MAFY,8CAGTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKzB,SAAS,CAAEQ,SAAUiB,S,oBAO/C,WAAU,IAAD,EAE2B1B,KAAKJ,MAA/Ba,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQL,KAAK+B,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAKzB,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEQ,YAAY,kBACZC,aAAcb,KAAKiB,iBAErB,cAAC,EAAD,CAAUR,SAAUkB,W,GArCVpB,aCMHwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b8c929be.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './card.styles.css';\n\nclass Card extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            id: '',\n            name: '',\n            email: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            id: this.props.monster.id,\n            name: this.props.monster.name,\n            email: this.props.monster.email\n        })\n    }\n\n    render() {\n        return (\n            <div className='card-container'>\n                <img\n                    alt='monster'\n                    src={`https://robohash.org/${this.state.id}?set=set2&size=180x180`}\n                />\n                <h2> {this.state.name} </h2>\n                <p> {this.state.email} </p>\n            </div>\n        );\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport './card-list.styles.css';\n\nimport Card from '../card/card.component';\n\nclass CardList extends Component {\n\n    render() {\n        return (\n            <div className='card-list'>\n                {\n                    this.props.monsters.map((monster) => (\n                        <Card key={monster.id} monster={monster}/>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nexport default CardList;","import React, { Component } from 'react';\nimport './search-box.styles.css';\n\nclass SearchBox extends Component {\n    render() {\n        const { placeholder, handleChange } = this.props;\n\n        return (\n            <input\n                className='search'\n                type='search'\n                placeholder={placeholder}\n                onChange={handleChange}\n            />\n        );\n    }\n}\n\nexport default SearchBox;","import './App.css';\nimport React, { Component } from 'react';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    const url = 'https://jsonplaceholder.typicode.com/users';\n\n    fetch(url)\n      .then(response => response.json())\n        .then(users => this.setState({ monsters: users }))\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox \n          placeholder='search monsters'\n          handleChange={this.onSearchChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}